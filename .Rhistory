rsconnect::deployApp(appDir = "Regression/")
download.file(url("https://vincentarelbundock.github.io/Rdatasets/csv/Stat2Data/ThreeCars2017.csv"), destfile = "Regression/data.csv")
download.file("https://vincentarelbundock.github.io/Rdatasets/csv/Stat2Data/ThreeCars2017.csv", destfile = "Regression/car.csv")
rmarkdown::shiny_prerendered_clean('Regression/index.Rmd')
rsconnect::deployApp(appDir = "Regression/")
q("no")
library(tidyverse)
install.packages("rsconnect")
install.packages("rsconnect")
rsconnect::deployApp("Regression/")
?rmarkdown::render
args(flex_dashboard)
args(flexdashboard::flex_dashboard)
rmarkdown::render("index.Rmd")
rmarkdown::render("Regression/index.Rmd")
source('~/Dropbox/Talks/Trial-Lecture/_scripts/Real-vs-Simulated.R')
source('~/Dropbox/Talks/Trial-Lecture/_scripts/Real-vs-Simulated.R')
source('~/Dropbox/Talks/Trial-Lecture/_scripts/Inverse-Transformation.R')
source('~/Dropbox/Talks/Trial-Lecture/_scripts/Inverse-Transformation.R')
?geom_rug
source('~/Dropbox/Talks/Trial-Lecture/_scripts/Inverse-Transformation.R', echo=TRUE)
plt
?geom_rug
devtools::install_github("tidyverse/ggplot2")
source('~/Dropbox/Talks/Trial-Lecture/_scripts/Inverse-Transformation.R', echo=TRUE)
source('~/Dropbox/Talks/Trial-Lecture/_scripts/Inverse-Transformation.R', echo=TRUE)
source('~/Dropbox/Talks/Trial-Lecture/_scripts/Inverse-Transformation.R', echo=TRUE)
source('~/Dropbox/Talks/Trial-Lecture/_scripts/Rejection-Sampling-2.R')
plt
source('~/Dropbox/Talks/Trial-Lecture/_scripts/Rejection-Sampling-2.R', echo=TRUE)
plt
source('~/Dropbox/Talks/Trial-Lecture/_scripts/Rejection-Sampling-2.R')
source('~/Dropbox/Talks/Trial-Lecture/_scripts/Resampling.R')
source('~/Dropbox/Talks/Trial-Lecture/_scripts/Resampling.R')
library(tidyverse)
dta <- tibble(
x = 1:4,
y = 1:4,
Sample = factor(1:4)
)
## permutation --------
set.seed(1)
dta_perm <- dta %>% mutate(
Resample1 = sample(1:4, 4, replace = FALSE),
Resample2 = sample(1:4, 4, replace = FALSE),
Resample3 = sample(1:4, 4, replace = FALSE),
Resample4 = sample(1:4, 4, replace = FALSE)
) %>%
gather(key, value, x:y) %>%
mutate_at(vars(contains("ample")), as.character) %>%
gather(fill, fill_value, Sample:Resample4) %>%
group_by(key, fill) %>%
mutate(fill_value = sample(fill_value)) %>%
ungroup() %>%
mutate(fill = factor(fill, levels = c('Sample', paste0("Resample", 1:4))))
## Bootstrapping --------
set.seed(1)
dta_boot <- dta %>% mutate(
Resample1 = sample(1:4, 4, replace = TRUE),
Resample2 = sample(1:4, 4, replace = TRUE),
Resample3 = sample(1:4, 4, replace = TRUE),
Resample4 = sample(1:4, 4, replace = TRUE)
) %>%
gather(key, value, x:y) %>%
mutate_at(vars(contains("ample")), as.character) %>%
gather(fill, fill_value, Sample:Resample4) %>%
mutate(fill = factor(fill, levels = c('Sample', paste0("Resample", 1:4))))
## Jackkniffing --------
set.seed(1)
dta_jk <- dta %>% mutate(
Resample1 = sample(c(NA, 1:4), 4, replace = FALSE),
Resample2 = sample(c(NA, 1:4), 4, replace = FALSE),
Resample3 = sample(c(NA, 1:4), 4, replace = FALSE),
Resample4 = sample(c(NA, 1:4), 4, replace = FALSE)
) %>%
gather(key, value, x:y) %>%
mutate_at(vars(contains("ample")), as.character) %>%
gather(fill, fill_value, Sample:Resample4) %>%
mutate(fill = factor(fill, levels = c('Sample', paste0("Resample", 1:4))))
## Cross-Validation --------
set.seed(1)
dta_cv <- dta %>% mutate(
Resample1 = sample(c(NA, NA, 1:4), 4, replace = FALSE),
Resample2 = sample(c(NA, NA, 1:4), 4, replace = FALSE),
Resample3 = sample(c(NA, NA, 1:4), 4, replace = FALSE),
Resample4 = sample(c(NA, NA, 1:4), 4, replace = FALSE)
) %>%
gather(key, value, x:y) %>%
mutate_at(vars(contains("ample")), as.character) %>%
gather(fill, fill_value, Sample:Resample4) %>%
mutate(fill = factor(fill, levels = c('Sample', paste0("Resample", 1:4))))
dta <- bind_rows(
Permutation = dta_perm,
Bootstrap = dta_boot,
Jacknife = dta_jk,
CrossValidation = dta_cv,
.id = "Method"
) %>%
mutate(Method = factor(
Method,
levels = c("Permutation", "Bootstrap",
"Jacknife", "CrossValidation")))
walk(unique(dta$Method), function(mthd) {
plt <- dta %>% filter(Method == mthd) %>%
ggplot(aes(key, value, fill = fill_value)) +
geom_tile(color = "black", show.legend = FALSE) +
facet_grid(Method ~ fill) +
scale_fill_brewer(palette = "Blues") +
labs(x = "Variable", y = "Observation") +
ggtitle(paste0("Resampling Method: ", mthd))
ggsave(plt, filename = paste0("_images/", mthd, ".png"), width = 5, height = 2, dpi = 150)
})
source('~/Dropbox/Talks/Trial-Lecture/_scripts/Simple-Comparison.R')
source('~/.active-rstudio-document', echo=TRUE)
tibble(x = r * sin(theta),
y = r * cos(theta)) %>%
ggplot(aes(x, y)) +
geom_point() +
geom_line(group = 1)
tibble(x = r * sin(theta),
y = r * cos(theta)) %>%
ggplot(aes(x, y)) +
geom_point() +
geom_path(group = 1)
sin(30)
sin(pi/2)
30/180
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
tibble(x = r * sin(theta),
y = r * cos(theta)) %>%
rownames_to_column("label")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?aes_lable
?aes_label
?geom_label
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
Sys.time()
format(Sys.time(), "%H")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
as.POSIXct(Sys.time())
lubridate::seconds(as.POSIXct(Sys.time()))
lubridate::seconds(as.POSIXct(Sys.time()))/3600
lubridate::second(as.POSIXct(Sys.time()))
as.POSIXct(Sys.time())
as.POSIXct(Sys.time())
lubridate::second(as.POSIXct(Sys.time()))
?lubridate::seconds
lubridate::period(as.POSIXct(Sys.time()))
hours(as.POSIXct(Sys.time()))
lubridate::hours(as.POSIXct(Sys.time()))
lubridate::seconds(as.POSIXct(Sys.time()))
lubridate::seconds_to_period(lubridate::seconds(as.POSIXct(Sys.time())))
lubridate::days(as.POSIXct(Sys.time()))
lubridate::days(seconds(as.POSIXct(Sys.time())))
library(lubridate)
Sys.time() %>%
seconds()
source('~/.active-rstudio-document', echo=TRUE)
Sys.time() %>%
seconds() %>%
seconds_to_period()
Sys.time() %>%
seconds() %>%
seconds_to_period()
Sys.time() %>%
seconds() %>%
seconds_to_period() %>%
days()
Sys.time() %>%
seconds() %>%
days()
?days
ddays(as.POSIXct(Sys.time()))
Sys.time() %>%
seconds() %>%
ddays()
Sys.time() %>%
seconds() %>%
days()
Sys.time() %>%
seconds() %>%
seconds_to_period() %>%
is.period()
Sys.time() %>%
seconds() %>%
seconds_to_period() %>%
days()
Sys.time() %>%
seconds()
Sys.time() %>%
seconds() %>%
seconds_to_period() %>%
as.period()
Sys.time() %>%
seconds() %>%
seconds_to_period() %>%
as.period() %>%
days()
Sys.time() %>%
seconds() %>%
seconds_to_period() %>%
str()
Sys.time() %>%
seconds() %>%
seconds_to_period() %>%
day()
this_period <- Sys.time() %>%
seconds() %>%
seconds_to_period()
this_period %>% hour()
period_to_seconds()
period_to_seconds(this_period)
period_to_seconds(this_period)/day(this_period)
(period_to_seconds(this_period)/day(this_period))/3600
(period_to_seconds(this_period)/day(this_period))/24/3600
(period_to_seconds(this_period)/day(this_period))/2
get_xy_point <- function(radius = 1, time = NULL,  unit = c("hour", "min", "sec")) {
if (is.null(time)) time <- Sys.time()
}
get_xy_point()
get_xy_point <- function(radius = 1, time = NULL,  unit = c("hour", "min", "sec")) {
if (is.null(time)) time <- Sys.time()
browser()
return(out)
}
get_xy_point()
time
hr <- format(time, "%H")
hr
hr <- as.numeric(format(time, "%H"))
hr
m <- as.numeric(format(time, "%M"))
m
s <- as.numeric(format(time, "%S"))
h
h <- as.numeric(format(time, "%H"))
m <- as.numeric(format(time, "%M"))
s <- as.numeric(format(time, "%S"))
h
m
print(h)
print(m)
print(s)
source('/Data/Dropbox/Talks/Trial-Lecture/_scripts/clock.R', echo=TRUE)
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
theme_void() +
annotate_rect(xmin = 0.1, xmax = 0.7, ymin = 0.1, ymax = 0.2)
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
theme_void() +
annotate(geom = "rect", xmin = 0.1, xmax = 0.7, ymin = 0.1, ymax = 0.2)
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
# theme_void() +
annotate(geom = "rect", xmin = 0.1, xmax = 0.7, ymin = 0.1, ymax = 0.3)
-r
source('/Data/Dropbox/Talks/Trial-Lecture/_scripts/clock.R', echo=TRUE)
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
# theme_void() +
annotate(geom = "rect", xmin = -r/3, xmax = r/3, ymin = -r/3, ymax = -r/2)
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
# theme_void() +
annotate(geom = "rect", xmin = -r/3, xmax = r/3, ymin = -r/4, ymax = -r/3)
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
# theme_void() +
annotate(geom = "rect", xmin = -r/3, xmax = r/3, ymin = -r/3, ymax = -r/4)
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
# theme_void() +
annotate(geom = "rect", xmin = -r/3, xmax = r/3, ymin = -r/2, ymax = -r/3)
source('/Data/Dropbox/Talks/Trial-Lecture/_scripts/clock.R', echo=TRUE)
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
# theme_void() +
annotate(geom = "rect", xmin = -r/3, xmax = r/3, ymin = -r/1.5, ymax = -r/2)
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
# theme_void() +
annotate(geom = "rect", xmin = -r/3, xmax = r/3, ymin = -r/1.5, ymax = -r/2,
fill = "lightgrey")
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
# theme_void() +
annotate(geom = "rect", xmin = -r/3, xmax = r/3, ymin = -r/1.5, ymax = -r/2,
fill = "lightgrey") +
annotate(geom = "text", x = 0, y = 0, label = format(Sys.time(), "%H:%M:%S"))
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
# theme_void() +
annotate(geom = "rect", xmin = -r/3, xmax = r/3, ymin = -r/1.5, ymax = -r/2,
fill = "lightgrey") +
annotate(geom = "text", x = 0, y = r/1.5, label = format(Sys.time(), "%H:%M:%S"))
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
# theme_void() +
annotate(geom = "rect", xmin = -r/3, xmax = r/3, ymin = -r/1.5, ymax = -r/2,
fill = "lightgrey") +
annotate(geom = "text", x = 0, y = -r/1.5, label = format(Sys.time(), "%H:%M:%S"))
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
# theme_void() +
annotate(geom = "rect", xmin = -r/3, xmax = r/3, ymin = -r/1.5, ymax = -r/2,
fill = "lightgrey") +
annotate(geom = "text", x = 0, y = -r/1.5, label = format(Sys.time(), "%H:%M:%S"),
vjust = 1)
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
# theme_void() +
annotate(geom = "rect", xmin = -r/3, xmax = r/3, ymin = -r/1.5, ymax = -r/2,
fill = "lightgrey") +
annotate(geom = "text", x = 0, y = -r/1.5, label = format(Sys.time(), "%H:%M:%S"),
vjust = -1)
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
# theme_void() +
annotate(geom = "rect", xmin = -r/3, xmax = r/3, ymin = -r/1.5, ymax = -r/2,
fill = "lightgrey") +
annotate(geom = "text", x = 0, y = -r/1.5, label = format(Sys.time(), "%H:%M:%S"),
vjust = -1, font = "mono")
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
# theme_void() +
annotate(geom = "rect", xmin = -r/3, xmax = r/3, ymin = -r/1.5, ymax = -r/2,
fill = "lightgrey") +
annotate(geom = "text", x = 0, y = -r/1.5, label = format(Sys.time(), "%H:%M:%S"),
vjust = -1, family = "mono")
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
# theme_void() +
annotate(geom = "rect", xmin = -r/3, xmax = r/3, ymin = -r/1.5, ymax = -r/2,
fill = "lightgrey") +
annotate(geom = "text", x = 0, y = -r/1.5, label = format(Sys.time(), "%H:%M:%S"),
vjust = -1, family = "mono", size = 4)
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
# theme_void() +
annotate(geom = "rect", xmin = -r/3, xmax = r/3, ymin = -r/1.5, ymax = -r/2,
fill = "lightgrey") +
annotate(geom = "text", x = 0, y = -r/1.5, label = format(Sys.time(), "%H:%M:%S"),
vjust = -1, family = "mono", size = 6)
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
# theme_void() +
annotate(geom = "rect", xmin = -r/3, xmax = r/3, ymin = -r/1.5, ymax = -r/2,
fill = "lightgrey") +
annotate(geom = "text", x = 0, y = -r/1.5, label = format(Sys.time(), "%H:%M:%S"),
vjust = -1, family = "mono", size = 6, fontface = "bold")
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
theme_void() +
annotate(geom = "rect", xmin = -r/3, xmax = r/3, ymin = -r/1.5, ymax = -r/2,
fill = "lightgrey") +
annotate(geom = "text", x = 0, y = -r/1.5, label = format(Sys.time(), "%H:%M:%S"),
vjust = -1, family = "mono", size = 6, fontface = "bold")
df%>%
ggplot(aes(x, y)) +
geom_text(aes(label = label),
size = ifelse(df$label %% 3, 6, 12)) +
geom_point(x = 0, y = 0, size = 9) +
coord_equal() +
theme_minimal() +
annotate(geom = "rect", xmin = -r/3, xmax = r/3, ymin = -r/1.5, ymax = -r/2,
fill = "lightgrey") +
annotate(geom = "text", x = 0, y = -r/1.5, label = format(Sys.time(), "%H:%M:%S"),
vjust = -1, family = "mono", size = 6, fontface = "bold")
data.frame(x = 1:12, y = 1:12)
data.frame(x = 1:12, y = 1:12) %>%
ggplot(aes(x, y)) +
geom_bar()
data.frame(x = 1:12, y = 1:12) %>%
ggplot(aes(x, y)) +
geom_bar(stat = "identity")
data.frame(x = 1:12, y = 1:12) %>%
ggplot(aes(x, y)) +
geom_bar(stat = "identity") +
coord_polar()
data.frame(x = 1:12, y = 5) %>%
ggplot(aes(x, y)) +
geom_bar(stat = "identity") +
coord_polar()
data.frame(x = 1:12, y = 5) %>%
ggplot(aes(x, y)) +
geom_point() +
coord_polar()
data.frame(x = 1:12, y = 15) %>%
ggplot(aes(x, y)) +
geom_point() +
coord_polar()
data.frame(x = 1:12, y = 5) %>%
ggplot(aes(x, y)) +
geom_point() +
coord_polar()
data.frame(x = 1:12, y = 5) %>%
ggplot(aes(x, y)) +
geom_point() +
coord_polar(clip = "off")
data.frame(x = 1:12, y = 5) %>%
ggplot(aes(x, y)) +
geom_point() +
coord_polar(clip = "on")
data.frame(x = 1:12, y = 5) %>%
ggplot(aes(x, y)) +
geom_point()
source('/Data/Dropbox/Talks/Trial-Lecture/_scripts/clock.R')
source('/Data/Dropbox/Talks/Trial-Lecture/_scripts/clock.R', echo=TRUE)
